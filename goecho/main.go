package main

import (
	"encoding/json"
	"flag"
	"fmt"
	"net/http"

	"github.com/sirupsen/logrus"
	"github.com/weizhe0422/GoCourse_20201122/goecho/wz_pkg"
)

type Weekday int

const (
	a = 2 << iota
	b
	c
)

type User struct {
	id   int
	name string
}

func main() {
	var u User = User{}
	u.id = 123
	u.name = "test"
	fmt.Println(u)

	//FlagPrac()
	//GetAPIData()
	//slicePrac()
	//srcSlice := []int{1, 2, 3}
	//fmt.Printf("Ori: %v\n", srcSlice)
	//returnSlice := slicePrac2(srcSlice, 2, 1000)
	//fmt.Printf("After: %v\n", srcSlice)
	//fmt.Printf("After: %v\n", returnSlice)
	//tmpSlice := []int{1, 2, 3, 4, 5, 6, 7, 8, 9}
	//tmpSlice = deleteEleFromSlice(tmpSlice, 5)
	//tmpSlice = append(tmpSlice[:4], tmpSlice[5:]...)
	//fmt.Println(tmpSlice)

	s := "panic happend..."
	defer func(s string) {
		if r := recover(); r != nil {
			fmt.Println(s + ": success to recover")
		}
	}(s)

	panic(s)
}

func deleteEleFromSlice(srcSlice []int, idx int) []int {
	return append(srcSlice[:idx-1], srcSlice[idx:]...)
}

func slicePrac2(srcSlice []int, idx, target_value int) []int {
	result := make([]int, len(srcSlice))

	result[idx] = target_value
	return result
}

func slicePrac() {
	//arrayList := [5]int{12, 34, 56, 78, 90}
	//sliceList := arrayList[2:5]
	//fmt.Println(sliceList)
	// 注意異動Slice會一起連動改Array
	//sliceList[2] = 999
	//fmt.Println(sliceList) // [56 78 999]
	//fmt.Println(arrayList) // [12 34 56 78 999]

	//arr := [10]int{1, 2, 3, 4, 5}
	//slice := arr[2:7]
	//fmt.Println(len(slice), cap(slice), slice)

	//s := []int{8, 3, 5, 1, 2, 4, 6, 9, 7, 10}
	//sort.Slice(s, func(i, j int) bool { return s[i] < s[j] })
	//fmt.Println(s)

	tmpSlice := make([]int, 0)
	numsSlice := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
	for _, value := range numsSlice {
		tmpSlice = append(tmpSlice, value)
		fmt.Printf("長度=%d, 容量=%d, 內容=%v \n", len(tmpSlice), cap(tmpSlice), tmpSlice)
	}
	/*
		長度=1, 容量=1, 內容=[1]
		長度=2, 容量=2, 內容=[1 2]
		長度=3, 容量=4, 內容=[1 2 3]
		長度=4, 容量=4, 內容=[1 2 3 4]
		長度=5, 容量=8, 內容=[1 2 3 4 5]
		長度=6, 容量=8, 內容=[1 2 3 4 5 6]
		長度=7, 容量=8, 內容=[1 2 3 4 5 6 7]
		長度=8, 容量=8, 內容=[1 2 3 4 5 6 7 8]
		長度=9, 容量=16, 內容=[1 2 3 4 5 6 7 8 9]
		長度=10, 容量=16, 內容=[1 2 3 4 5 6 7 8 9 10]
	*/
}

func FlagPrac() {
	hello_fl := flag.String("hello", "nobody", "use -hello to say something")
	flag.Parse()
	arg := flag.Args()
	if len(arg) == 0 {
		fmt.Println("Hello, " + *hello_fl)
	} else {
		fmt.Println(arg[0] + ", " + *hello_fl)
	}
}

func GetAPIData() {
	var (
		resp       *http.Response
		err        error
		THSRResult wz_pkg.AutoGenerated
	)

	if resp, err = http.Get("https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json"); err != nil {
		logrus.Fatalf("failt to get THSR web page: %s", err)
	}
	defer resp.Body.Close()

	jsonDeco := json.NewDecoder(resp.Body)
	jsonDeco.Decode(&THSRResult)
	for _, item := range THSRResult.Features {
		logrus.Info(item.Properties.Name)
	}
}
